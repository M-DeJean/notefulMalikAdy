{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder/AddFolder.js","AddNote/AddNote.js","ErrorBoundary.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","children","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","format","modified","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","AddFolder","str","folderName","onSubmit","storeNewFolderData","target","value","pattern","placeholder","required","AddNote","handleSubmitNote","noteName","noteContent","ErrorBoundary","state","hasError","App","Content-Type","body","JSON","stringify","data","setState","Date","_this2","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","Provider","ErrorBoundary_ErrorBoundary","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.0c857a53.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types';\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, children, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n\nNavCircleButton.propTypes = {\n  tag: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  className: PropTypes.string.isRequired,\n  children: PropTypes.array,\n  modified: PropTypes.string\n}\n\n","import React from 'react'\n\nexport default React.createContext({\n  notes: [],\n  folders: [],\n  addFolder: () => {},\n  addNote: () => {},\n  deleteNote: () => {},\n})\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default class NoteListNav extends React.Component {\n  static contextType = ApiContext;\n\n  render() {\n    const { folders=[], notes=[] } = this.context\n    return (\n      <div className='NoteListNav'>\n        <ul className='NoteListNav__list'>\n          {folders.map(folder =>\n            <li key={folder.id}>\n              <NavLink\n                className='NoteListNav__folder-link'\n                to={`/folder/${folder.id}`}\n              >\n                <span className='NoteListNav__num-notes'>\n                  {countNotesForFolder(notes, folder.id)}\n                </span>\n                {folder.name}\n              </NavLink>\n            </li>\n          )}\n        </ul>\n        <div className='NoteListNav__button-wrapper'>\n          <CircleButton\n            tag={Link}\n            to='/add-folder'\n            type='button'\n            className='NoteListNav__add-folder-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Folder\n          </CircleButton>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { findNote, findFolder } from '../notes-helpers'\nimport './NotePageNav.css'\n\nexport default class NotePageNav extends React.Component {\n  static defaultProps = {\n    history: {\n      goBack: () => { }\n    },\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext;\n\n  render() {\n    const { notes, folders, } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || {}\n    const folder = findFolder(folders, note.folderId)\n    return (\n      <div className='NotePageNav'>\n        <CircleButton\n          tag='button'\n          role='link'\n          onClick={() => this.props.history.goBack()}\n          className='NotePageNav__back-button'\n        >\n          <FontAwesomeIcon icon='chevron-left' />\n          <br />\n          Back\n        </CircleButton>\n        {folder && (\n          <h3 className='NotePageNav__folder-name'>\n            {folder.name}\n          </h3>\n        )}\n      </div>\n    )\n  }\n}\n","export default {\n  API_ENDPOINT: 'http://localhost:9090'\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport './Note.css'\nimport PropTypes from 'prop-types'\n\nexport default class Note extends React.Component {\n  static defaultProps ={\n    onDeleteNote: () => {},\n  }\n\n  static propTypes = {\n    noteId: PropTypes.string,\n    name: PropTypes.string,\n    id: PropTypes.string,\n  }\n\n  static contextType = ApiContext;\n\n  handleClickDelete = e => {\n    e.preventDefault()\n    const noteId = this.props.id\n\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      },\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(() => {\n        this.context.deleteNote(noteId)\n        // allow parent to perform extra behaviour\n        this.props.onDeleteNote(noteId)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    // const { name, id, modified } = this.props\n    return (\n      <div className='Note'>\n        <h2 className='Note__title'>\n          <Link to={`/note/${this.props.id}`}>\n            {this.props.name}\n          </Link>\n        </h2>\n        <button\n          className='Note__delete'\n          type='button'\n          onClick={this.handleClickDelete}\n        >\n          <FontAwesomeIcon icon='trash-alt' />\n          {' '}\n          remove\n        </button>\n        <div className='Note__dates'>\n          <div className='Note__dates-modified'>\n            Modified\n            {' '}\n            <span className='Date'>\n              {format(this.props.modified, 'Do MMM YYYY')}\n            </span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport ApiContext from '../ApiContext'\nimport { getNotesForFolder } from '../notes-helpers'\nimport './NoteListMain.css'\n\nexport default class NoteListMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  render() {\n    const { folderId } = this.props.match.params\n    const { notes=[] } = this.context\n    const notesForFolder = getNotesForFolder(notes, folderId)\n    return (\n      <section className='NoteListMain'>\n        <ul>\n          {notesForFolder.map(note =>\n            <li key={note.id}>\n              <Note\n                id={note.id}\n                name={note.name}\n                modified={note.modified}\n              />\n            </li>\n          )}\n        </ul>\n        <div className='NoteListMain__button-container'>\n          <CircleButton\n            tag={Link}\n            to='/add-note'\n            type='button'\n            className='NoteListMain__add-note-button'\n          >\n            <FontAwesomeIcon icon='plus' />\n            <br />\n            Note\n          </CircleButton>\n        </div>\n      </section>\n    )\n  }\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport ApiContext from '../ApiContext'\nimport { findNote } from '../notes-helpers'\nimport './NotePageMain.css'\n\nexport default class NotePageMain extends React.Component {\n  static defaultProps = {\n    match: {\n      params: {}\n    }\n  }\n  static contextType = ApiContext\n\n  handleDeleteNote = noteId => {\n    this.props.history.push(`/`)\n  }\n\n  render() {\n    const { notes=[] } = this.context\n    const { noteId } = this.props.match.params\n    const note = findNote(notes, noteId) || { content: '' }\n    return (\n      <section className='NotePageMain'>\n        <Note\n          id={note.id}\n          name={note.name}\n          modified={note.modified}\n          onDeleteNote={this.handleDeleteNote}\n        />\n        <div className='NotePageMain__content'>\n          {(note.content || '').split(/\\n \\r|\\n/).map((para, i) =>\n            <p key={i}>{para}</p>\n          )}\n        </div>\n      </section>\n    )\n  }\n}","import React from 'react';\nimport ApiContext from '../ApiContext';\n\nexport default class AddFolder extends React.Component {\n\n    static contextType = ApiContext;\n\n    storeNewFolderData(str) {\n        const folderName = str\n        this.context.addFolder(folderName)\n        this.props.history.push('/')\n    }\n\n    render(){\n        \n        return (\n            <form className=\"form\" onSubmit={(e) => {\n                e.preventDefault()\n                this.storeNewFolderData(e.target.folderName.value) \n                }} >\n                <h2>Add New Folder</h2>\n                <label>Folder Name:</label>\n                <input name=\"folderName\" type='text' pattern=\".{3,}\" placeholder=\"3 character minumum\"required></input>\n                <button type='submit' >Submit</button>\n                \n            </form>\n        );\n    }\n\n    \n\n}\n\n","import React from 'react';\nimport ApiContext from '../ApiContext'\n\nexport default class AddNote extends React.Component {\n\n    static contextType = ApiContext\n\n    handleSubmitNote = (e) => {\n        e.preventDefault()\n        this.context.addNote(e.target.noteName.value, e.target.noteContent.value, e.target.folderId.value)\n        this.props.history.push('/')\n    }\n\n    render() {\n        return (\n            <form className=\"form\" onSubmit={this.handleSubmitNote}>\n                <h2>Add New Note</h2>\n                <ul id=\"menuHeader\">\n                    <li><select id=\"dropdown\" name=\"folderId\">\n                        <option >Select Folder</option>\n                        {this.context.folders.map(folder => {\n                            return(\n                            <option key={folder.name} value={folder.id}>\n                                {folder.name}\n                            </option>\n                        )})}\n                    </select></li>\n                </ul>\n                <label>Note Name:</label>\n                <input pattern=\".{3,}\" type='text' name=\"noteName\" placeholder=\"3 character minimum\"required></input><br />\n                <label>New Content:</label>\n                <input type='text' name=\"noteContent\" required></input>\n                <button type='submit'>Submit</button>\n            </form >\n        );\n    }\n\n}","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    state = {\n        hasError: false\n    }\n\n    static getDerivedStateFromError() {\n        return { hasError: true }\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return (\n                <div className=\"error\">\n                    Something went wrong!\n                </div>\n            )\n        }\n        return (\n            <div>\n                {this.props.children}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport './App.css';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport ErrorBoundary from '../ErrorBoundary'\n\nclass App extends Component {\n    state = {\n        notes: [],\n        folders: [],\n        error: null\n    };\n\n    componentDidMount() {\n        Promise.all([\n            fetch(`${config.API_ENDPOINT}/notes`),\n            fetch(`${config.API_ENDPOINT}/folders`)\n        ])\n            .then(([notesRes, foldersRes]) => {\n                if (!notesRes.ok)\n                    return notesRes.json().then(e => Promise.reject(e));\n                if (!foldersRes.ok)\n                    return foldersRes.json().then(e => Promise.reject(e));\n\n                return Promise.all([notesRes.json(), foldersRes.json()]);\n            })\n            .then(([notes, folders]) => {\n                this.setState({ notes, folders });\n            })\n            .catch(error => {\n                this.setState({ error: 'ERROR: Could not fetch data. Please try again' })\n            });\n    }\n\n    addFolder = name => {\n\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name })\n        })\n            .then(res => res.json())\n            .then(data => {\n                const folders = this.state.folders\n                folders.push(data)\n                this.setState({ folders })\n            })\n            .catch(error => this.setState({error: 'Could not connect to server, please try again later.'}))\n    }\n\n    addNote = (name, context, folderId) => {\n        fetch(`${config.API_ENDPOINT}/notes`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                name,\n                context,\n                folderId,\n                modified: new Date()\n            })\n        })\n            .then(res => res.json())\n            .then(data => {\n                const notes = this.state.notes\n                notes.push(data)\n                this.setState({ notes })\n            })\n            .catch(error => this.setState({error: 'Could not connect to server, please try again later.'}))\n    }\n\n    handleDeleteNote = noteId => {\n        this.setState({\n            notes: this.state.notes.filter(note => note.id !== noteId)\n        });\n    };\n\n    renderNavRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListNav}\n                    />\n                ))}\n                <Route path=\"/add-note\" component={NoteListNav} />\n                <Route path=\"/add-folder\" component={NoteListNav} />\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\n                <Route path=\"/add-folder\" component={NotePageNav} />\n                <Route path=\"/add-note\" component={NotePageNav} />\n            </>\n        );\n    }\n\n    renderMainRoutes() {\n        return (\n            <>\n                {['/', '/folder/:folderId'].map(path => (\n                    <Route\n                        exact\n                        key={path}\n                        path={path}\n                        component={NoteListMain}\n                    />\n                ))}\n                <Route path=\"/add-folder\" component={AddFolder} />\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\n                <Route path=\"/add-note\" component={AddNote} />\n            </>\n        );\n    }\n\n    render() {\n        const value = {\n            notes: this.state.notes,\n            folders: this.state.folders,\n            deleteNote: this.handleDeleteNote,\n            addFolder: this.addFolder,\n            addNote: this.addNote\n        };\n        return (\n            <ApiContext.Provider value={value}>\n                <ErrorBoundary>\n                    <div className=\"App\">\n                        <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n                        <header className=\"App__header\">\n                            <h1>\n                                <Link to=\"/\">Noteful</Link>{' '}\n                                <FontAwesomeIcon icon=\"check-double\" />\n                            </h1>\n                        </header>\n                        <main className=\"App__main\">\n                            <div className=\"error\">\n                            {this.state.error}\n                            </div>\n                            {this.renderMainRoutes()}\n                        </main>\n                    </div>\n                </ErrorBoundary>\n            </ApiContext.Provider>\n        );\n    }\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}